{"version":3,"sources":["components/ContactCreator/ContactCreator.module.css","components/ContactFilter/ContactFilter.module.css","components/ContactList/ContactList.module.css","components/ContactCreator/ContactCreator.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.js","components/Phonebook/Phonebook.js","components/App.js","index.js","components/Contact/Contact.module.css"],"names":["module","exports","ContactCreator","state","name","number","filter","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","this","className","styles","form","onSubmit","label","htmlFor","id","input","type","onChange","button","Component","Contact","onDeleteContact","contactBlock","contact","onClick","ContactList","items","length","list","map","item","key","ContactFilter","onChangeFilter","div","placeholder","Phonebook","contacts","addContact","find","contactInPhonebook","alert","contactToAdd","shortid","generate","prevState","changeFilter","deleteContact","existedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","toUpperCase","includes","filterContacts","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbf62199.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactCreator_form__2nrim\",\"label\":\"ContactCreator_label__1tkG9\",\"input\":\"ContactCreator_input__1CYW9\",\"button\":\"ContactCreator_button__o3-1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"ContactFilter_div__1V-cv\",\"label\":\"ContactFilter_label__2tm_D\",\"input\":\"ContactFilter_input__2S0ly\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2mnwu\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactCreator.module.css';\n\nexport default class ContactCreator extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    filter: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onAddContact({ ...this.state });\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <div>\n        <form className={styles.form} onSubmit={this.handleSubmit}>\n          <label className={styles.label} htmlFor=\"name\">\n            Name\n            <input\n              id=\"name\"\n              className={styles.input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className={styles.label} htmlFor=\"number\">\n            Number\n            <input\n              id=\"number\"\n              className={styles.input}\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button type=\"submit\" className={styles.button}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contact.module.css';\n\nconst Contact = ({ name, number, onDeleteContact }) => (\n  <div className={styles.contactBlock}>\n    <p className={styles.contact}>\n      {name}: {number}\n    </p>\n    <button className={styles.button} type=\"button\" onClick={onDeleteContact}>\n      Delete\n    </button>\n    <div />\n  </div>\n);\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Contact from '../Contact/Contact';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ items, onDeleteContact }) =>\n  items.length > 0 && (\n    <div>\n      <ul className={styles.list}>\n        {items.map(item => (\n          <li key={item.id}>\n            <Contact\n              // eslint-disable-next-line react/jsx-props-no-spreading\n              {...item}\n              onDeleteContact={() => onDeleteContact(item.id)}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactFilter.module.css';\n\nconst ContactFilter = ({ value, onChangeFilter }) => (\n  <div className={styles.div}>\n    <label className={styles.label} htmlFor=\"filter\">\n      Find contacts by name\n      <input\n        id=\"filter\"\n        className={styles.input}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n        placeholder=\"Enter a name...\"\n      />\n    </label>\n  </div>\n);\n\nContactFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default ContactFilter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactCreator from '../ContactCreator/ContactCreator';\nimport ContactList from '../ContactList/ContactList';\nimport ContactFilter from '../ContactFilter/ContactFilter';\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toUpperCase().includes(filter.toUpperCase()),\n  );\n};\n\nexport default class Phonebook extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const existedContacts = localStorage.getItem('contacts');\n    if (existedContacts) {\n      const contacts = JSON.parse(existedContacts);\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addContact = contact => {\n    const { contacts } = this.state;\n    const existContact = contacts.find(\n      contactInPhonebook => contactInPhonebook.name === contact.name,\n    );\n    if (existContact) {\n      alert(`Contact ${contact.name} is already exists in your phonebook!`);\n    } else if (contact.name === '' || contact.number === '') {\n      alert('Please, fill all fields!');\n    } else {\n      const contactToAdd = {\n        ...contact,\n        id: shortid.generate(),\n      };\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contactToAdd],\n      }));\n    }\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = filterContacts(contacts, filter);\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactCreator onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        <ContactFilter value={filter} onChangeFilter={this.changeFilter} />\n        <ContactList\n          items={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Phonebook from './Phonebook/Phonebook';\n\nconst App = () => (\n  <>\n    <Phonebook />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'normalize.css';\nimport './main.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactBlock\":\"Contact_contactBlock__1lUvz\",\"contact\":\"Contact_contact__3Xg1e\",\"button\":\"Contact_button__1Mnjx\"};"],"sourceRoot":""}